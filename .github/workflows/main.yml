# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on: [push, pull_request]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-rpi-32bit:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore -r linux-arm
      - name: Build
        # build, then change mode to executable and zip it to retain the permissions
        run: |
          cd 'EV Car UI'
          dotnet publish -r linux-arm -p:Configuration=Release -p:PublishReadyToRun=true -p:PublishSingleFile=true -p:UseAppHost=true --self-contained true
          cd ..
          cp run.sh './EV Car UI/bin/Release/net6.0/linux-arm/publish/'
          chmod a+x './EV Car UI/bin/Release/net6.0/linux-arm/publish/run.sh'
          chmod a+x './EV Car UI/bin/Release/net6.0/linux-arm/publish/EV Car UI'
          cd './EV Car UI/bin/Release/net6.0/linux-arm/publish/'
          zip RPi-32bit.zip ./*
      - name: Upload
        # upload as  artifact
        uses: actions/upload-artifact@v3
        with:
          name: RasberryPi-32bit
          path: './EV Car UI/bin/Release/net6.0/linux-arm/publish/RPi-32bit.zip'
  
  build-rpi-64bit:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore -r linux-arm64
      - name: Build
        # build, then change mode to executable and zip it to retain the permissions
        run: |
          cd 'EV Car UI'
          dotnet publish -r linux-arm64 -p:Configuration=Release -p:PublishReadyToRun=true -p:PublishSingleFile=true -p:UseAppHost=true --self-contained true
          cd ..
          cp run.sh './EV Car UI/bin/Release/net6.0/linux-arm64/publish/'
          chmod a+x './EV Car UI/bin/Release/net6.0/linux-arm64/publish/run.sh'
          chmod a+x './EV Car UI/bin/Release/net6.0/linux-arm64/publish/EV Car UI'
          cd './EV Car UI/bin/Release/net6.0/linux-arm64/publish/'
          zip RPi-64bit.zip ./*
      - name: Upload
        # upload as  artifact
        uses: actions/upload-artifact@v3
        with:
          name: RasberryPi-64bit
          path: './EV Car UI/bin/Release/net6.0/linux-arm64/publish/RPi-64bit.zip'  
  
  build-linux:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore -r linux-x64
      - name: Build
        # build, then change mode to executable and zip it to retain the permissions
        run: |
          cd 'EV Car UI'
          dotnet publish -r linux-x64 -p:Configuration=Release -p:PublishReadyToRun=true -p:PublishSingleFile=true -p:UseAppHost=true --self-contained true
          cd ..
          cp run.sh './EV Car UI/bin/Release/net6.0/linux-x64/publish/'
          chmod a+x './EV Car UI/bin/Release/net6.0/linux-x64/publish/run.sh'
          chmod a+x './EV Car UI/bin/Release/net6.0/linux-x64/publish/EV Car UI'
          cd './EV Car UI/bin/Release/net6.0/linux-x64/publish/'
          zip linux.zip ./*
      - name: Upload
        # upload as  artifact
        uses: actions/upload-artifact@v3
        with:
          name: Linux
          path: './EV Car UI/bin/Release/net6.0/linux-x64/publish/linux.zip'  

  build-windows:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      - name: Restore dependencies
        run: dotnet restore -r win-x64
      - name: Build
        run: |
          cd 'EV Car UI'
          dotnet publish -r win-x64 -p:Configuration=Release -p:PublishReadyToRun=true -p:PublishSingleFile=true -p:UseAppHost=true --self-contained true
      - name: Upload
        # upload as  artifact
        uses: actions/upload-artifact@v3
        with:
          name: Windows
          path: './EV Car UI/bin/Release/net6.0/win-x64/publish/'